# Profiling zsh start
# zmodload zsh/zprof

stty -ixon -ixoff           # disable ctrl-s and ctrl-q
setopt EXTENDED_GLOB        # Use extended globbing syntax.
setopt HIST_IGNORE_DUPS     # Do not record an event that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS # Delete an old recorded event if a new event is a duplicate.
setopt HIST_SAVE_NO_DUPS    # Do not write a duplicate event to the history file.
setopt SHARE_HISTORY        # Share history between session/terminals
setopt HIST_IGNORE_SPACE    # Ignore commands starting with space

HISTFILE=~/.zhistory
HISTSIZE=50000
SAVEHIST=50000

source $HOME/.shell/bindings
source $HOME/.shell/completion
source $HOME/.shell/tools

if [[ "$OSTYPE" =~ "darwin" ]]; then
  # when put in zshenv it gets overwritten by tmux which calls /etc/profile again (login shell)
  export PATH=$HOME/Library/Python/3.10/bin:/opt/homebrew/opt/gnu-tar/libexec/gnubin:/opt/homebrew/opt/findutils/libexec/gnubin:/opt/homebrew/Cellar/coreutils/9.1/libexec/gnubin:/opt/homebrew/bin:/opt/homebrew/opt/mysql-client/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH

fi

trap_exit_tmux() {
  # switch only when current session has only one window and one pane
  if [ "$(tmux list-panes | wc -l)" -eq 1 ] && [ "$(tmux list-windows | wc -l)" -eq 1 ]; then
    tmux switch-client -t default
  fi
}

if [[ $- == *i* ]]; then
  # activate trap only when inside tmux and not inside Neovim terminal (in tmux)
  if [[ $TERM_PROGRAM == "tmux" && -z $NVIM ]]; then
    trap trap_exit_tmux EXIT
  fi
fi

source $HOME/.zshenv

if [ -z "$TMUX" ] && [ "$TERM" = "xterm-256color" ]; then
  tmux attach || exec tmux new-session && exit
fi

# vim: filetype=sh
